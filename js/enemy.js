// Generated by CoffeeScript 1.6.1
(function() {
  var Enemy;

  Enemy = (function() {

    function Enemy() {
      this.position = {
        x: 400,
        y: 460
      };
      this.speed = 4;
      this.angle = 0;
      this.rotation = 0;
      this.target = null;
      this.waypoints = [];
      this.size = 24;
      this.once = 0;
    }

    Enemy.prototype.update = function() {
      var col, dx, dy, moveX, moveY, path, row, waypoint;
      row = Math.floor(this.position.y / Tile.size);
      col = Math.floor(this.position.x / Tile.size);
      this.playerRow = Math.floor(game.player.position.y / Tile.size);
      this.playerCol = Math.floor(game.player.position.x / Tile.size);
      if (this.playerRow !== this.oldPlayerRow || this.playerCol !== this.oldPlayerCol) {
        this.oldPlayerCol = this.playerCol;
        this.oldPlayerRow = this.playerRow;
        path = new Pathfinder(col, row, this.playerCol, this.playerRow);
        this.waypoints = path.path;
        if (waypoint = this.waypoints.pop()) {
          this.target = {
            x: waypoint[0] * Tile.size + Tile.size * 0.5,
            y: waypoint[1] * Tile.size + Tile.size * 0.5
          };
        }
      }
      if (this.target) {
        dx = this.target.x - this.position.x;
        dy = this.target.y - this.position.y;
        if ((Math.abs(dx) < 5) && (Math.abs(dy) < 5)) {
          this.position.x = this.target.x;
          this.position.y = this.target.y;
          if (waypoint = this.waypoints.pop()) {
            this.target = {
              x: waypoint[0] * Tile.size + Tile.size * 0.5,
              y: waypoint[1] * Tile.size + Tile.size * 0.5
            };
          }
        } else {
          this.angle = Math.atan2(dy, dx);
          moveX = this.speed * Math.cos(this.angle);
          moveY = this.speed * Math.sin(this.angle);
          this.position.x += moveX;
          this.position.y += moveY;
        }
      }
      return this.rotation += (this.angle - this.rotation) / 6;
    };

    Enemy.prototype.render = function() {
      game.context.beginPath();
      game.context.fillStyle = "#ff99ee";
      game.context.translate(this.size * 0.5, this.size * 0.5);
      game.context.rotate(-this.rotation);
      game.context.translate(-this.position.x, -this.position.y);
      game.context.rect(0, 0, this.size, this.size);
      game.context.resetTransform();
      return game.context.fill();
    };

    return Enemy;

  })();

  window.Enemy = Enemy;

}).call(this);
